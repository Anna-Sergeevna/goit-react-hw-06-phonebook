{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactList.module.css","components/Container/Container.module.css"],"names":["module","exports","Container","title","children","className","s","container","Section","section","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","preventDefault","autoComplete","text","type","pattern","required","input","onChange","disabled","button","Filter","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","shortid","generate","includes","alert","prevState","normalizeFilter","toLowerCase","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f8ace9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Cc6f\",\"title\":\"Section_title__2lPmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__v9bhj\",\"text\":\"Filter_text__G3hv8\",\"input\":\"Filter_input__3wLPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactForm_text__9qHTo\",\"input\":\"ContactForm_input__2vnjj\",\"button\":\"ContactForm_button__2GrDR\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <section className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const haldleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={haldleSubmit} autoComplete='off'>\r\n      <label>\r\n        <p className={s.text}>Name</p>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.input}\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <p className={s.text}>Number</p>\r\n        <input\r\n          type='tel'\r\n          name='number'\r\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n          required\r\n          className={s.input}\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type='submit' disabled={!name} className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input\r\n        type='text'\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        className={s.input}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.name}>{name}:</p>\r\n          <p className={s.number}>{number}</p>\r\n\r\n          <button\r\n            type='button'\r\n            className={s.button}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\r\nimport shortid from 'shortid';\r\nimport Container from 'components/Container';\r\nimport Section from 'components/Section';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState(\r\n    () => JSON.parse(window.localStorage.getItem('contacts')) ?? [],\r\n  );\r\n  const [filter, setFilter] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //   setContacts(JSON.parse(window.localStorage.getItem('contacts')) ?? []);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? alert(`${name} is already in contacts.`)\r\n      : setContacts(prevState => [contact, ...prevState]);\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(contacts.filter(contact => contact.id !== contactId));\r\n  };\r\n\r\n  return (\r\n    <Container title=''>\r\n      <Section title='Phonebook'>\r\n        <ContactForm onSubmit={addContact} />\r\n      </Section>\r\n      <Section title='Contacts'>\r\n        <Filter value={filter} onChange={changeFilter} />\r\n        <ContactList\r\n          contacts={getVisibleContacts()}\r\n          onDeleteContact={deleteContact}\r\n        />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__bSF1U\",\"item\":\"ContactList_item__1ak6X\",\"name\":\"ContactList_name__7Pmr4\",\"button\":\"ContactList_button__11AFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3lCaA\",\"title\":\"Container_title__4q_nk\"};"],"sourceRoot":""}