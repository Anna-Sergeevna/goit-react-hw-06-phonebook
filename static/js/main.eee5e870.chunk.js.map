{"version":3,"sources":["components/Container/Container.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Loader/Loader.jsx","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","contactspersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","Loading","className","s","loader","type","color","height","width","timeout","Container","title","children","container","Section","section","connect","dispatch","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","preventDefault","text","pattern","required","input","onChange","disabled","button","getVisibleContacts","normalizeFilter","toLowerCase","contact","includes","onDeleteContact","list","map","item","onClick","App","ReactDOM","render","StrictMode","loading","Loader","document","getElementById"],"mappings":"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","file":"static/js/main.eee5e870.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3lCaA\",\"title\":\"Container_title__4q_nk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Cc6f\",\"title\":\"Section_title__2lPmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__v9bhj\",\"text\":\"Filter_text__G3hv8\",\"input\":\"Filter_input__3wLPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__IXdg0\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/filter');\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contacts-reducer';\r\n\r\nconst contactspersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactspersistConfig, contactReducer),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={s.loader}>\r\n      <Loader\r\n        type='ThreeDots'\r\n        color='#00BFFF'\r\n        height={200}\r\n        width={200}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <section className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const haldleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n\r\n    // (contacts.map(contact => contact.name).includes(name)\r\n    //   ? alert(`${name} is already in contacts.`)\r\n    //   : setContacts(prevState => [contact, ...prevState]);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    // <form onSubmit={haldleSubmit} autoComplete='off'>\r\n    <form onSubmit={haldleSubmit}>\r\n      <label>\r\n        <p className={s.text}>Name</p>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.input}\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <p className={s.text}>Number</p>\r\n        <input\r\n          type='tel'\r\n          name='number'\r\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n          required\r\n          className={s.input}\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type='submit' disabled={!name} className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(actions.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input\r\n        type='text'\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        className={s.input}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.changeFilter(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateProps, mapDispatchToProps)(Filter);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.name}>{name}:</p>\r\n          <p className={s.number}>{number}</p>\r\n\r\n          <button\r\n            type='button'\r\n            className={s.button}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizeFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import Container from 'components/Container';\r\nimport Section from 'components/Section';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container title=''>\r\n      <Section title='Phonebook'>\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title='Contacts'>\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport Loader from 'components/Loader';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<Loader />} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactForm_text__9qHTo\",\"input\":\"ContactForm_input__2vnjj\",\"button\":\"ContactForm_button__2GrDR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__bSF1U\",\"item\":\"ContactList_item__1ak6X\",\"name\":\"ContactList_name__7Pmr4\",\"button\":\"ContactList_button__11AFn\"};"],"sourceRoot":""}